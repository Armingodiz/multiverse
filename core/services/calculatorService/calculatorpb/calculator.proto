syntax = "proto3";

package calculator;
option go_package = "/calculatorpb";


message AddRequest {
  int32 a = 1;
  int32 b = 2;
}

message AddResponse {
  int32 sum = 1;
}

message PrimeNumberDecompositionRequest {
  int64 number = 1;
}

message PrimeNumberDecompositionResponse {
  int64 prime_factor = 1;
}

message ComputeAverageRequest {
  int32 numbers = 1;
}

message ComputeAverageResponse {
  double average = 1;
}

message FindMaximumRequest {
  int32 number = 1;
}

message FindMaximumResponse {
  int32 maximum = 1;
}

message DivideRequest {
  int32 numerator = 1;
  int32 denominator = 2;
}

message DivideResponse {
  int32 quotient = 1;
  int32 remainder = 2;
}

service Calculator {
  // unary example 
  rpc Add(AddRequest) returns (AddResponse) {}
  // server streaming example
  rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {}
  // client streaming example
  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {}
  // bidirectional streaming example
  rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {}
  // unary example with error handling
  //error handeling: rpc may throw InvalidArgument code if we pass 0 as denominator
  rpc Divide(DivideRequest) returns (DivideResponse) {}
}